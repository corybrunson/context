library(context)
scale_standard(objs = levels(titanic_data$Sex))
titanic_data <- as.data.frame(Titanic)
class_scale <- rbind(
c(1, 1, 1, 0),
c(0, 1, 1, 0),
c(0, 0, 1, 0),
c(0, 1, 1, 1)
)
rownames(class_scale) <- levels(titanic_data$Class)
colnames(class_scale) <- paste0(">", levels(titanic_data$Class))
scale_context(data = titanic_data, var = "Class", scale = class_scale)
# nominal scale for Sex variable
scale_context(data = titanic_data, var = "Sex", scale = "nominal")
# ordinal scale for Age variable
scale_context(data = titanic_data, var = "Age", scale = "ordinal")
both_vars <- c("Class", "Sex")
titanic_data <- as.data.frame(Titanic)
scale_standard(objs = levels(titanic_data$Sex))
sex_scale <- scale_standard(objs = levels(titanic_data$Sex))
both_scales <- list(class_scale, sex_scale)
scales_context(data = titanic_data, vars = both_vars, scales = both_scales)
library(context)
print(scale_nominal(objs = unique(titanic_data$Class)))
titanic_data <- as.data.frame(Titanic)
print(scale_nominal(objs = unique(titanic_data$Class)))
print(scale_nominal(objs = unique(titanic_data$Class)))
print(scale_ordinal(objs = unique(titanic_data$Class)))
for (scale in c("boolean", "revordinal", "interordinal")) {
print(scale_standard(x = titanic_data$Class, scale = scale))
}
print(scale_biordinal(objs = unique(titanic_data$Class)))
print(scale_biordinal(objs = unique(titanic_data$Class)), cut = 3)
print(scale_biordinal(objs = unique(titanic_data$Class)), cut = 4)
print(scale_biordinal(objs = unique(titanic_data$Class)), fred = 4)
scale_biordinal <- function(objs, cut) {
if (missing(cut)) cut <- ceiling(length(objs) / 2)
if (cut == 0) return(scale_revordinal(objs))
if (cut == length(objs)) return(scale_ordinal(objs))
rem <- length(objs) - cut
scale_mat <- rbind(cbind(upper.tri(diag(cut), diag = TRUE),
matrix(F, nrow = cut, ncol = rem)),
cbind(matrix(F, nrow = rem, ncol = cut),
lower.tri(diag(rem), diag = TRUE)))
class(scale_mat) <- "numeric"
rownames(scale_mat) <- sort(objs)
colnames(scale_mat) <- paste0(rep(c("leq", "geq"), c(cut, rem)),
"_", objs)
scale_mat
}
print(scale_biordinal(objs = unique(titanic_data$Class)), fred = 4)
print(scale_biordinal(objs = unique(titanic_data$Class)), cut = 4)
objs = unique(titanic_data$Class)
cut = 3
if (cut == 0) return(scale_revordinal(objs))
if (cut == length(objs)) return(scale_ordinal(objs))
rem <- length(objs) - cut
rem
scale_mat <- rbind(cbind(upper.tri(diag(cut), diag = TRUE),
matrix(F, nrow = cut, ncol = rem)),
cbind(matrix(F, nrow = rem, ncol = cut),
lower.tri(diag(rem), diag = TRUE)))
scale_mat
class(scale_mat) <- "numeric"
scale_mat
rownames(scale_mat) <- sort(objs)
colnames(scale_mat) <- paste0(rep(c("leq", "geq"), c(cut, rem)),
"_", objs)
scale_mat
print(scale_biordinal(objs = unique(titanic_data$Class), cut = 3))
check()
library(devtools)
check()
check()
