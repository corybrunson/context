% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make-scale-standard.r
\name{make_scale_standard}
\alias{make_scale_biordinal}
\alias{make_scale_boolean}
\alias{make_scale_interordinal}
\alias{make_scale_nominal}
\alias{make_scale_ordinal}
\alias{make_scale_revordinal}
\alias{make_scale_standard}
\title{Standard scales}
\usage{
make_scale_standard(objs, n, scale = "nominal", ...)

make_scale_nominal(objs)

make_scale_boolean(objs)

make_scale_ordinal(objs)

make_scale_revordinal(objs)

make_scale_interordinal(objs)

make_scale_biordinal(objs, cut = ceiling(length(objs)/2))
}
\arguments{
\item{objs}{Vector (usually character or factor).}

\item{n}{Positive integer. The number of objects in the scale. Ignored if 
\code{objs} is present.}

\item{scale}{Character. Name of standard scale, e.g. "ordinal". Defaults to
"nominal".}

\item{...}{Additional arguments (listed below) passed from 
\code{scale_standard} to specific scale generators.}

\item{cut}{Numeric. Integer between 0 and \code{length(objs)} indicating the 
index at which to cut \code{objs} for biordinal scaling.}
}
\description{
Standard scales
}
\examples{
titanic_data <- as.data.frame(Titanic)

# nominal scale
print(make_scale_nominal(objs = titanic_data$Class))

# ordinal scale
print(make_scale_ordinal(objs = titanic_data$Class))

# other scales
for (scale in c("boolean", "revordinal", "interordinal")) {
  print(make_scale_standard(objs = titanic_data$Class, scale = scale))
}

# biordinal scale with custom cut value
print(make_scale_biordinal(objs = titanic_data$Class, cut = 3))
}

